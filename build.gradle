/*
 * Copyright 2020 Haulmont.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
    id 'groovy'
    id 'maven-publish'
}

group = 'io.jmix.masquerade'
archivesBaseName = 'jmix-masquerade'

repositories {
    if (rootProject.hasProperty('jmixRepoUrl')) {
        maven {
            url rootProject['jmixRepoUrl']

            if (rootProject.hasProperty('jmixRepoUser') && rootProject.hasProperty('jmixRepoPassword')) {
                credentials {
                    username rootProject['jmixRepoUser']
                    password rootProject['jmixRepoPassword']
                }
            }
        }
        gradlePluginPortal()
    } else {
        mavenLocal()
        maven {
            url 'https://nexus.jmix.io/repository/public'
        }
        gradlePluginPortal()
    }
}

dependencies {
    implementation 'com.leacox.motif:motif:0.1'
    implementation 'com.codeborne:selenide:6.12.4'
    implementation('org.jsoup:jsoup') {
        version {
            strictly '1.11.2'
        }
    }

    testImplementation 'org.codehaus.groovy:groovy:3.0.7'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.slf4j:slf4j-simple:2.0.7'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    from sourceSets.main.resources
    archiveClassifier = 'sources'
}

java {
    withSourcesJar()
    withJavadocJar()
}

artifacts {
    archives sourcesJar
}

publishing {
    String jmixUploadUrl = rootProject.findProperty('jmixUploadUrl')
    if (jmixUploadUrl) {
        repositories {
            maven {
                url = rootProject['jmixUploadUrl']
                credentials {
                    username rootProject['jmixUploadUser']
                    password rootProject['jmixUploadPassword']
                }
            }
        }
    }
    publications {
        javaMaven(MavenPublication) {
            artifactId = archivesBaseName
            from components.java
        }
    }
}